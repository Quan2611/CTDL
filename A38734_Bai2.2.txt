#include<iostream>
#include<string>
using namespace std;
const int MaxItem = 100;
template<class T>
class Stack{
    private:
        T a[MaxItem];
        int size;
    public:
        Stack();
        bool IsEmpty() const;
        bool IsFull() const;
        void Push(T newitem);
        void Pop();
        void Pop(T &stackTop);
        int GetSize() const;
        T GetTop()const;
};
template <class T>
Stack<T>::Stack(){
    size=0;
}
template<class T>
void Stack<T>::Push(T newitem){
    if(!IsFull()){
        a[size]=newitem;
        size++;
    }
    else
        cout<<"danh sach da day!"<<endl;
}
template<class T>
void Stack<T>::Pop(){
    if(!IsEmpty()){
        size--;
    }
    else    
        cout<<"danh sach rong!"<<endl;
}
template<class T>
void Stack<T>::Pop(T &stacktop){
    if(!IsEmpty()){
    stacktop=a[size-1];
    size--;}
    else
        cout<<"danh sach rong!"<<endl;
}
template<class T>
bool Stack<T>::IsEmpty() const{
    if(size==0)
        return true;
    else
        return false;
}
template<class T>
bool Stack<T>::IsFull() const{
    if(size==MaxItem)
        return true;
    else    
        return false;
}
template<class T>
int Stack<T>::GetSize() const{
    return size;}
template<class T>
T Stack<T>::GetTop() const{
    if(!IsEmpty())
        return a[size-1];
    else    
        cout<<"danh sach rong!"<<endl;
}
bool Check(string str){ 
    Stack<char> s; 
    char x; 
  
    for(int i=0; i<str.length(); i++){ 
        if(str[i]=='('||str[i]=='['||str[i]=='{'){ 
            s.Push(str[i]); 
        }
  
        if(s.IsEmpty()) 
           return false; 
  
        switch(str[i]){ 
            case ')': 
      
                x = s.GetTop(); 
                s.Pop(); 
                if(x=='{' || x=='[') 
                    return false; 
                break; 
      
            case '}': 
      
                x = s.GetTop(); 
                s.Pop(); 
                if(x=='(' || x=='[') 
                    return false; 
                break; 
      
            case ']': 
      
                x = s.GetTop(); 
                s.Pop(); 
                if(x =='(' || x == '{') 
                    return false; 
                break; 
        } 
    } 
  
    return (s.IsEmpty()); 
} 
int main(){
    Stack<int> s1;
    // s1.Push(7);
    // s1.Push(8);
    // s1.Push(9);
   // cout<<s1.GetTop();
    //Stack<char> s3;
    string a;
    cout<<"moi nhap :"<<endl;
    cin>>a;
    if(Check(a)){ 
        cout<<"can bang"; 
    }    
    else{
        cout<<"khong can bang"; 
    }  
}